@startuml

interface Drivable {
    + drive() : void
    + snort() : void
    + stop() : void
    + accelerate() : void
}

interface Refreshable {
    + refill(amount : int) : void
    + consume(amount : int) : void
}

interface Breakable {
    + isBroken : boolean

    + breakItem() : void
    + isBroken() : boolean
}

abstract class Item implements Breakable{
    - title : String
    - isBroken : boolean

    + Item(item : String)

    + breakItem() : void
    + getTitle() : String
    + <<abstract>> isBroken() : boolean
}

class Shard extends Item {
    - title : String
    - isBroken : boolean

    + Shard(title : String)

    + getTitle() : String
    + hook(character : Character) : void
    + crack(character : Character) : void
}

abstract class Vehicle extends Item implements Drivable, Refreshable{
    - title : String
    - <<abstract>> title : String
    - fuelLevel : int
    - driver : Driver
    - passengers : Passengers[]
    - type : TypeCar
    - isBroken : boolean

    + Vehicle(type: TypeCar, driver : Driver)
    + Vehicle(type: TypeCar, driver : Driver, passengers : Passenger[])

    + getTitle() : String
    + getFuelLevel() : int
    + isBroken() : boolean
    + setFuelLevel(amount : int) : void
    + smash(item : Item) : void
    + crush(entity : Entity) : void
    + refill(amount : int) : void
    + consume(amount : int) : void
    + <<abstract>> drive() : void
    + <<abstract>> snort() : void
    + <<abstract>> stop() : void
    + <<abstract>> accelerate() : void
}

class Entity {
    - name : String

    + Entity(name : String)
    + getName() : String
}

abstract class Character extends Entity implements Refreshable{
    - name : String
    - <<abstract>> canDrive : boolean

    + Character(name : String)

    + getName() : String
    + refill(amount : int) : void
    + consume(amount : int) : void
    + shout() : void
    + learnDrive() : void
    + runOut() : void
    + buildCar() : void
    + run() : void
    + see() : void
    + ask() : void
    + openFence() : void
}

class Driver extends Character {
    - name : String

    + Driver(name : String)

    + getName() : String
    + drive() : void
    + pressPedals() : void
    + pullLevers() : void
    + grabSteeringWheel() : void
    + turn() : void
}

class Passenger extends Character {
    - name : String

    + Passenger(name : String)

    + getName() : String
    + refill(amount : int) : void
    + consume(amount : int) : void
}
@enduml